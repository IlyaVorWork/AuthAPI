basePath: /user
definitions:
  models.AddRolesDTO:
    properties:
      login:
        type: string
      roles:
        type: string
    required:
    - login
    - roles
    type: object
  models.DeleteFileDTO:
    properties:
      file-name:
        type: string
      login:
        type: string
    required:
    - file-name
    - login
    type: object
  models.DownloadFileDTO:
    properties:
      file-name:
        type: string
      login:
        type: string
      path:
        type: string
    required:
    - file-name
    - login
    - path
    type: object
  models.GetFileListDTO:
    properties:
      login:
        type: string
    required:
    - login
    type: object
  models.GetUserDataDTO:
    properties:
      login:
        type: string
    required:
    - login
    type: object
  models.LoginDTO:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  models.RegisterDTO:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  models.UnregisterDTO:
    properties:
      login:
        type: string
    required:
    - login
    type: object
  responses.AddRolesError:
    properties:
      error:
        type: string
      roles status:
        additionalProperties:
          type: string
        type: object
    type: object
  responses.AddRolesSuccess:
    properties:
      login:
        type: string
      roles status:
        additionalProperties:
          type: string
        type: object
    type: object
  responses.Error:
    properties:
      error:
        type: string
    type: object
  responses.GetFileListSuccess:
    properties:
      files list:
        items:
          type: string
        type: array
    type: object
  responses.GetUserSuccess:
    properties:
      id:
        type: string
      login:
        type: string
      password:
        type: string
      roles:
        items:
          type: string
        type: array
    type: object
  responses.LoginSuccess:
    properties:
      access_token:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  title: Auth API
  version: "1.0"
paths:
  /addRoles:
    put:
      consumes:
      - application/json
      parameters:
      - description: Login of an account and roles to add
        in: body
        name: AddRolesDTO
        required: true
        schema:
          $ref: '#/definitions/models.AddRolesDTO'
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AddRolesSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.AddRolesError'
      summary: AddRoles user
      tags:
      - User
  /deleteFile:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Login of an owner and name of file to delete
        in: body
        name: DeleteFileDTO
        required: true
        schema:
          $ref: '#/definitions/models.DeleteFileDTO'
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: File was successfully deleted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      summary: DeleteFile user
      tags:
      - File
  /downloadFile:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login of an owner, name of file and path of downloading
        in: body
        name: DownloadFileDTO
        required: true
        schema:
          $ref: '#/definitions/models.DownloadFileDTO'
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: File was successfully downloaded
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      summary: DownloadFile user
      tags:
      - File
  /getFileList:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login of an owner of files
        in: body
        name: GetFileListDTO
        required: true
        schema:
          $ref: '#/definitions/models.GetFileListDTO'
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.GetFileListSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      summary: GetFileList user
      tags:
      - File
  /getUserData:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login of an account which data to get
        in: body
        name: GetUserDataDTO
        required: true
        schema:
          $ref: '#/definitions/models.GetUserDataDTO'
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.GetUserSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      summary: GetUserData user
      tags:
      - User
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Account data
        in: body
        name: LoginDTO
        required: true
        schema:
          $ref: '#/definitions/models.LoginDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.LoginSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Login user
      tags:
      - User
  /register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Data of new account
        in: body
        name: RegisterDTO
        required: true
        schema:
          $ref: '#/definitions/models.RegisterDTO'
      produces:
      - application/json
      responses:
        "200":
          description: New profile was successfully registered
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Register new user
      tags:
      - User
  /unregister:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Data of account to delete
        in: body
        name: UnregisterDTO
        required: true
        schema:
          $ref: '#/definitions/models.UnregisterDTO'
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Profile was successfully unregistered
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Unregister user
      tags:
      - User
  /uploadFile:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: File to upload
        in: formData
        name: file
        required: true
        type: file
      - description: Login of a user
        in: formData
        name: login
        required: true
        type: string
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: File was successfully uploaded
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
      summary: UploadFile user
      tags:
      - File
swagger: "2.0"
